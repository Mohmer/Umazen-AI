Umazen/
│
├── blockchain/
│   ├── programs/
│   │   ├── model-nft/
│   │   │   ├── Cargo.toml
│   │   │   ├── Xargo.toml
│   │   │   ├── build.rs
│   │   │   ├── src/
│   │   │   │   ├── lib.rs                  # Program entry
│   │   │   │   ├── state/
│   │   │   │   │   ├── mod.rs
│   │   │   │   │   ├── nft.rs              # NFT account structure
│   │   │   │   │   └── royalty.rs          # Royalty distribution
│   │   │   │   ├── instructions/
│   │   │   │   │   ├── mod.rs
│   │   │   │   │   ├── mint.rs             # Mint NFT with metadata
│   │   │   │   │   ├── transfer.rs         # Ownership transfer
│   │   │   │   │   ├── stake.rs            # Model staking
│   │   │   │   │   └── claim.rs            # Royalty claims
│   │   │   │   ├── errors/
│   │   │   │   │   └── mod.rs              # Custom error codes
│   │   │   │   └── utils/
│   │   │   │       ├── metadata.rs         # IPFS integration
│   │   │   │       └── validation.rs       # Signature verification
│   │   │   ├── tests/
│   │   │   │   ├── integration.rs
│   │   │   │   └── unit/
│   │   │   │       └── state_tests.rs
│   │   │   └── migrations/
│   │   │       └── v1_to_v2.rs
│   │   │
│   │   └── training-pool/
│   │       └── [similar detailed structure]
│   │
│   ├── sdk/
│   │   ├── js/
│   │   │   ├── package.json
│   │   │   ├── tsconfig.json
│   │   │   ├── src/
│   │   │   │   ├── clients/
│   │   │   │   │   ├── BaseClient.ts
│   │   │   │   │   ├── NFTClient.ts
│   │   │   │   │   └── TrainingClient.ts
│   │   │   │   ├── types/
│   │   │   │   │   ├── models.ts
│   │   │   │   │   └── transactions.ts
│   │   │   │   ├── utils/
│   │   │   │   │   ├── solana.ts
│   │   │   │   │   └── crypto.ts
│   │   │   │   └── index.ts
│   │   │   └── tests/
│   │   │       ├── nft.test.ts
│   │   │       └── training.test.ts
│   │   │
│   │   └── rust/
│   │       ├── Cargo.toml
│   │       └── src/
│   │           ├── lib.rs
│   │           └── api/
│   │               ├── mod.rs
│   │               └── rpc_client.rs
│   │
│   └── scripts/
│       ├── deployment/
│       │   ├── deploy_all.sh
│       │   ├── verify_programs.sh
│       │   └── upgrade_program.sh
│       ├── migration/
│       │   ├── v1_to_v2.rs
│       │   └── rollback.sh
│       └── keygen/
│           └── generate_keys.sh
│
├── zkml/
│   ├── circuits/
│   │   ├── gradient-verifier/
│   │   │   ├── circuit.circom
│   │   │   ├── inputs/
│   │   │   │   ├── test_input.json
│   │   │   │   └── constraints.csv
│   │   │   ├── scripts/
│   │   │   │   ├── compile.sh
│   │   │   │   └── test_circuit.sh
│   │   │   └── artifacts/
│   │   │       ├── wasm/
│   │   │       └── zkey/
│   │   │
│   │   └── inference-proof/
│   │       └── [similar structure]
│   │
│   ├── prover/
│   │   ├── Cargo.toml
│   │   ├── .cargo/
│   │   │   └── config.toml
│   │   └── src/
│   │       ├── main.rs
│   │       ├── zk_generator.rs
│   │       └── utils/
│   │           ├── merkle.rs
│   │           └── hash.rs
│   │
│   └── verifier/
│       ├── solana/
│       │   └── verifier-program/           # On-chain verification
│       └── evm/
│           └── Verifier.sol               # For cross-chain
│
├── federated-learning/
│   ├── coordinator/
│   │   ├── Cargo.toml
│   │   ├── Dockerfile
│   │   ├── docker-compose.yml
│   │   ├── src/
│   │   │   ├── main.rs
│   │   │   ├── aggregation/
│   │   │   │   ├── mod.rs
│   │   │   │   ├── fedavg.rs
│   │   │   │   └── secure_agg.rs
│   │   │   ├── network/
│   │   │   │   ├── rpc_server.rs
│   │   │   │   └── peer_discovery.rs
│   │   │   ├── storage/
│   │   │   │   └── model_cache.rs
│   │   │   └── metrics/
│   │   │       └── prometheus.rs
│   │   └── config/
│   │       ├── config.toml
│   │       └── logging.yaml
│   │
│   └── client/
│       ├── py/
│       │   ├── requirements.txt
│       │   ├── setup.py
│       │   └── src/
│       │       ├── client.py
│       │       └── utils/
│       │           ├── data_loader.py
│       │           └── zk_helper.py
│       └── rust/
│           ├── Cargo.toml
│           └── src/
│               ├── lib.rs
│               └── training/
│                   ├── local_train.rs
│                   └── gradient_calculation.rs
│
├── marketplace/
│   ├── api/
│   │   ├── graphql/
│   │   │   ├── schema/
│   │   │   │   ├── model.graphql
│   │   │   │   └── inference.graphql
│   │   │   ├── resolvers/
│   │   │   │   ├── model_resolver.ts
│   │   │   │   └── pricing_resolver.ts
│   │   │   └── generated/                  # Autogenerated types
│   │   │
│   │   └── rest/
│   │       ├── openapi.yaml
│   │       └── src/
│   │           ├── middleware/
│   │           │   ├── auth.ts
│   │           │   └── rate_limit.ts
│   │           ├── controllers/
│   │           │   ├── model_controller.ts
│   │           │   └── inference_controller.ts
│   │           └── routes/
│   │               └── v1.ts
│   │
│   ├── pricing-engine/
│   │   ├── Cargo.toml
│   │   ├── config/
│   │   │   └── market_config.toml
│   │   └── src/
│   │       ├── lib.rs
│   │       ├── calculator/
│   │       │   ├── base_calculator.rs
│   │       │   └── reinforcement.rs
│   │       └── simulation/
│   │           ├── monte_carlo.rs
│   │           └── load_test.rs
│   │
│   └── frontend/
│       ├── package.json
│       ├── vite.config.ts
│       ├── public/
│       │   └── assets/
│       │       ├── logos/
│       │       └── fonts/
│       └── src/
│           ├── main.ts
│           ├── stores/
│           │   ├── useMarketStore.ts
│           │   └── useWalletStore.ts
│           ├── components/
│           │   ├── marketplace/
│           │   │   ├── ModelCard.vue
│           │   │   └── InferenceWidget.vue
│           │   └── ui/
│           │       └── SolanaConnect.vue
│           ├── utils/
│           │   ├── solana.ts
│           │   └── formatters.ts
│           └── router/
│               └── index.ts
│
├── monitoring/
│   ├── prometheus/
│   │   ├── prometheus.yml
│   │   └── alerts/
│   │       └── node_alerts.rules
│   ├── grafana/
│   │   ├── provisioning/
│   │   │   └── dashboards/
│   │   │       └── umazen.json
│   │   └── dashboards/
│   │       └── training_metrics.json
│   └── loki/
│       └── loki-config.yaml
│
├── infrastructure/
│   ├── terraform/
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── modules/
│   │       ├── kubernetes/
│   │       └── aws/
│   └── ansible/
│       └── playbooks/
│           ├── node.yml
│           └── coordinator.yml
│
├── docs/
│   ├── ARCHITECTURE.md
│   ├── CONTRIBUTING.md
│   ├── API_REFERENCE.md
│   ├── DEPLOYMENT_GUIDE.md
│   └── diagrams/                      # Architecture diagrams
│       └── sequence_diagrams/
│           └── mint_flow.puml
│
├── tests/
│   ├── unit/
│   │   ├── rust/
│   │   │   └── model-nft/
│   │   │       ├── state_tests.rs
│   │   │       └── instruction_tests.rs
│   │   └── js/
│   │       └── sdk_tests/
│   │           ├── nft.test.ts
│   │           └── training.test.ts
│   │
│   ├── integration/
│   │   ├── blockchain/
│   │   │   └── full_workflow.test.ts
│   │   └── zkml/
│   │       └── proof_validation.test.py
│   │
│   └── e2e/
│       ├── marketplace/
│       │   └── purchase_flow.test.ts
│       └── training/
│           └── federated_training.test.py
│
├── .github/
│   ├── workflows/
│   │   ├── ci.yml                     # Main CI pipeline
│   │   ├── release.yml                # Release automation
│   │   ├── security.yml               # SAST scanning
│   │   └── dependency-review.yml
│   ├── dependabot.yml
│   └── ISSUE_TEMPLATE/
│       └── bug_report.md
│
├── configs/
│   ├── env/
│   │   ├── development.env
│   │   ├── production.env
│   │   └── test.env
│   └── logging/
│       └── log4rs.yaml
│
├── scripts/
│   ├── dev/
│   │   ├── start_localnet.sh
│   │   └── fund_wallets.sh
│   └── ops/
│       ├── backup_db.sh
│       └── monitor_nodes.sh
│
├── Cargo.toml                        # Root workspace config
├── package.json                      # JS monorepo config
├── Makefile
├── Dockerfile
├── .dockerignore
├── .gitignore
└── LICENSE
